#Pipe pipe_UuvYtuMe3hGDsmRgPm7D0g generated by pipe2py

from pipe2py import Context
from pipe2py.modules import *


def pipe_UuvYtuMe3hGDsmRgPm7D0g(context, _INPUT, conf=None, **kwargs):
    "Pipeline"
    if conf is None:
        conf = {}

    if context.describe_input:
        return [('', 'name', 'Name', 'text', 'Lancaster')]

    forever = pipeforever.pipe_forever(context, None, conf=None)

    def pipe_sw_581(context, _INPUT, conf=None, **kwargs):
        "Submodule"
        sw_581 = pipestrconcat.pipe_strconcat(context, _INPUT, conf={'part': [{'type': 'text', 'subkey': 'firstName'}, {'type': 'text', 'value': None}, {'type': 'text', 'subkey': 'Member'}]})
        return sw_581
    sw_371 = pipetextinput.pipe_textinput(context, forever, conf={'default': {'type': 'text', 'value': 'Lancaster'}, 'position': {'type': 'number', 'value': ''}, 'prompt': {'type': 'text', 'value': 'Name'}, 'name': {'type': 'text', 'value': 'name'}, 'debug': {'type': 'text', 'value': ''}})
    def pipe_sw_408(context, _INPUT, conf=None, **kwargs):
        "Submodule"
        sw_408 = pipestrconcat.pipe_strconcat(context, _INPUT, conf={'part': [{'type': 'text', 'value': 'Total allowances claimed, inc travel: '}, {'type': 'text', 'subkey': 'TotalAllowancesClaimedIncTravel'}, {'type': 'text', 'value': '<br>Total basic allowances claimed, ex travel: '}, {'type': 'text', 'subkey': 'TotalBasicAllowancesExcTravel'}, {'type': 'text', 'value': '<br>Total Travel claimed: '}, {'type': 'text', 'subkey': 'TotalTravelClaimed'}, {'type': 'text', 'value': '<br>MP Mileage: '}, {'type': 'text', 'subkey': 'Mileage'}, {'type': 'text', 'value': '<br>MP Rail Travel: '}, {'type': 'text', 'subkey': 'MPRail'}, {'type': 'text', 'value': '<br>MP Air Travel: '}, {'type': 'text', 'subkey': 'MPAir'}, {'type': 'text', 'value': '<br>Cost of staying away from main home: '}, {'type': 'text', 'subkey': 'CostofStayingAwayFromMainHome'}, {'type': 'text', 'value': '<br>London Supplement: '}, {'type': 'text', 'subkey': 'LondonSupplement'}, {'type': 'text', 'value': '<br>Office Running Costs: '}, {'type': 'text', 'subkey': 'OfficeRunningCosts'}, {'type': 'text', 'value': '<br>Staffing Costs: '}, {'type': 'text', 'subkey': 'StaffingCosts'}]})
        return sw_408
    sw_340 = pipecsv.pipe_csv(context, forever, conf={'other_sep': {'type': 'text', 'value': ''}, 'URL': {'type': 'url', 'value': 'http://spreadsheets.google.com/pub?key=p1rHUqg4g420UMaN1sPvaRg&output=csv&range=a1:AB646'}, 'skip': {'type': 'number', 'value': '0'}, 'col_name': [{'type': 'text', 'value': 'Member'}, {'type': 'text', 'value': 'firstName'}, {'type': 'text', 'value': 'TotalAllowancesClaimedIncTravel'}, {'type': 'text', 'value': 'TotalBasicAllowancesExcTravel'}, {'type': 'text', 'value': 'TotalTravelClaimed'}, {'type': 'text', 'value': 'CostofStayingAwayFromMainHome'}, {'type': 'text', 'value': 'LondonSupplement'}, {'type': 'text', 'value': 'OfficeRunningCosts'}, {'type': 'text', 'value': 'StaffingCosts'}, {'type': 'text', 'value': 'CentrallyPurchasedStationery'}, {'type': 'text', 'value': 'StationeryAssocdPostageCosts'}, {'type': 'text', 'value': 'CentralITProvision'}, {'type': 'text', 'value': 'StaffCoverAndOtherCosts'}, {'type': 'text', 'value': 'CommsAllowance'}, {'type': 'text', 'value': 'Mileage'}, {'type': 'text', 'value': 'MPRail'}, {'type': 'text', 'value': 'MPAir'}, {'type': 'text', 'value': 'MPMisc'}, {'type': 'text', 'value': 'MPOtherMileage'}, {'type': 'text', 'value': 'MPOtherRail'}, {'type': 'text', 'value': 'MPOtherAir'}, {'type': 'text', 'value': 'MPOtherEuropean'}, {'type': 'text', 'value': 'SpouseTotal'}, {'type': 'text', 'value': 'SpouseNumOfJourneys'}, {'type': 'text', 'value': 'FamilyTotal'}, {'type': 'text', 'value': 'FamilyNumOfJourneys'}, {'type': 'text', 'value': 'EmployeeTotal'}, {'type': 'text', 'value': 'EmployeeNumOfJourneys'}], 'col_row_start': {'type': 'number', 'value': '1'}, 'col_mode': {'type': 'text', 'value': 'custom'}, 'separator': {'type': 'text', 'value': ','}, 'col_row_end': {'type': 'number', 'value': '1'}})
    sw_375 = pipefilter.pipe_filter(context, sw_340, conf={'COMBINE': {'type': 'text', 'value': 'and'}, 'MODE': {'type': 'text', 'value': 'permit'}, 'RULE': {'field': {'type': 'text', 'value': 'Member'}, 'value': {'terminal': 'RULE_1_value', 'type': 'text'}, 'op': {'type': 'text', 'value': 'contains'}}}, RULE_1_value = sw_371)
    sw_385 = piperename.pipe_rename(context, sw_375, conf={'RULE': {'newval': {'type': 'text', 'value': 'title'}, 'field': {'type': 'text', 'value': 'Member'}, 'op': {'type': 'text', 'value': 'copy'}}})
    sw_400 = pipeloop.pipe_loop(context, sw_385, conf={'assign_part': {'type': 'text', 'value': 'all'}, 'with': {'type': 'text', 'value': ''}, 'emit_part': {'type': 'text', 'value': 'all'}, 'mode': {'type': 'text', 'value': 'assign'}, 'embed': {'type': 'module', 'value': {'type': 'strconcat', 'id': 'sw-408', 'conf': {'part': [{'type': 'text', 'value': 'Total allowances claimed, inc travel: '}, {'type': 'text', 'subkey': 'TotalAllowancesClaimedIncTravel'}, {'type': 'text', 'value': '<br>Total basic allowances claimed, ex travel: '}, {'type': 'text', 'subkey': 'TotalBasicAllowancesExcTravel'}, {'type': 'text', 'value': '<br>Total Travel claimed: '}, {'type': 'text', 'subkey': 'TotalTravelClaimed'}, {'type': 'text', 'value': '<br>MP Mileage: '}, {'type': 'text', 'subkey': 'Mileage'}, {'type': 'text', 'value': '<br>MP Rail Travel: '}, {'type': 'text', 'subkey': 'MPRail'}, {'type': 'text', 'value': '<br>MP Air Travel: '}, {'type': 'text', 'subkey': 'MPAir'}, {'type': 'text', 'value': '<br>Cost of staying away from main home: '}, {'type': 'text', 'subkey': 'CostofStayingAwayFromMainHome'}, {'type': 'text', 'value': '<br>London Supplement: '}, {'type': 'text', 'subkey': 'LondonSupplement'}, {'type': 'text', 'value': '<br>Office Running Costs: '}, {'type': 'text', 'subkey': 'OfficeRunningCosts'}, {'type': 'text', 'value': '<br>Staffing Costs: '}, {'type': 'text', 'subkey': 'StaffingCosts'}]}}}, 'assign_to': {'type': 'text', 'value': 'description'}}, embed = pipe_sw_408)
    sw_573 = pipeloop.pipe_loop(context, sw_400, conf={'assign_part': {'type': 'text', 'value': 'all'}, 'with': {'type': 'text', 'value': ''}, 'emit_part': {'type': 'text', 'value': 'all'}, 'mode': {'type': 'text', 'value': 'assign'}, 'embed': {'type': 'module', 'value': {'type': 'strconcat', 'id': 'sw-581', 'conf': {'part': [{'type': 'text', 'subkey': 'firstName'}, {'type': 'text', 'value': None}, {'type': 'text', 'subkey': 'Member'}]}}}, 'assign_to': {'type': 'text', 'value': 'title'}}, embed = pipe_sw_581)
    _OUTPUT = pipeoutput.pipe_output(context, sw_573, conf=None)
    return _OUTPUT

if __name__ == "__main__":
    context = Context()
    p = pipe_UuvYtuMe3hGDsmRgPm7D0g(context, None)
    for i in p:
        print i

